/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'chandan' at '8/23/16 9:17 AM' with Gradle 2.10
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'eclipse'

war{
	archiveName 'myYoutubeREST.war'
}



// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time

    compile "javax.ws.rs:jsr311-api:+"
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:+'
    compile 'com.google.apis:google-api-services-youtube:v3-rev178-1.22.0'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.4'
    compile 'com.google.oauth-client:google-oauth-client-java6:1.22.0'
    compile 'com.google.api-client:google-api-client-extensions:+'
    compile 'com.google.api-client:google-api-client:1.20.0'
    compile 'org.slf4j:slf4j-api:1.7.13'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:3.8.2'
}


// In this section we are defining the task for undeploying the WAR archive from glassfish container
task undeploy(type:Exec) {
    // ignore if not deployed yet
    ignoreExitValue true
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat', 'undeploy', 'myYoutubeREST'
    } else {
        commandLine  'asadmin', 'undeploy', 'myYoutubeREST'
    }
}

// In this section we are defining the task for deploying the WAR archive to glassfish container
task deploy(type:Exec) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat', 'deploy', '--contextroot', '/', 'build/libs/myYoutubeREST.war'
    } else {
        commandLine  'asadmin', 'deploy', '--contextroot', '/', 'build/libs/myYoutubeREST.war'
    }
}

